<?php

/**
 * @file
 * Install, update and uninstall functions for the sharedcontent module.
 */

/**
 * Implements hook_schema().
 */
function sharedcontent_schema() {
  $schema = array();

  $schema['sharedcontent_index'] = array(
    'description' => 'Shared Content index.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'connection_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
        'description' => 'Name of the connection the record was retrieved from.',
      ),
      'origin' => array(
        'type' => 'varchar',
        'length' => '8',
        'not null' => TRUE,
        'description' => 'Connection bundle name. Enum [local, shadow, remote]',
        'default' => 'local',
      ),
      'uuid' => array(
        'type' => 'varchar',
        'length' => 37,
        'not null' => TRUE,
        'description' => 'Globally unique id of the indexed record.',
      ),
      'parent_uuid' => array(
        'type' => 'varchar',
        'length' => 37,
        'not null' => FALSE,
        'description' => 'UUID of a possible parent record.',
      ),
      'entity_uuid' => array(
        'type' => 'varchar',
        'length' => 37,
        'not null' => TRUE,
        'description' => 'Id of the indexed local content.',
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'Type of the indexed content.',
      ),
      'entity_bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'description' => 'Bundle of the indexed content if available.',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Title of the indexed local content.',
      ),
      'langcode' => array(
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Language of the indexed local content.',
      ),
      'translationset_id' => array(
        'type' => 'int',
        'not null' => FALSE,
        'description' => 'Id of the translation set if any.',
      ),
      'keywords' => array(
        'type' => 'text',
        'not null' => TRUE,
        'description' => 'A bunch of keywords describing the indexed content.',
      ),
      'tags' => array(
        'type' => 'text',
        'not null' => FALSE,
        'description' => 'A bunch of tags describing the indexed content.',
      ),
      'url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'URL to the place the content can be viewed.',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Status of this index record. Allow to define if the record is visible and or can be linked.',
        'default' => 1,
        // Needs to be consistent with
        // \Drupal\sharedcontent\IndexInterface::STATUS_VISIBLE.
      ),
      'accessibility' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Accessibility status of this indexed record. Allow to define if the record is public accessible or not.',
        'default' => 1,
      ),
      'entity_created' => array(
        'description' => 'UNIX timestamp of when the indexed content was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'entity_changed' => array(
        'description' => 'UNIX timestamp of when the indexed content was updated.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'UNIX timestamp of when the index record was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'UNIX timestamp of when the index record was updated.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'reference' => array(
        'entity_type',
        'entity_uuid',
        'origin',
        'langcode',
      ),
    ),
  );

  $schema['sharedcontent_assignment'] = array(
    'description' => 'Shared Content assignment.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'origin' => array(
        'type' => 'varchar',
        'length' => '8',
        'not null' => TRUE,
        'description' => 'Bundle name. Enum [local, shadow, remote]',
        'default' => 'local',
      ),
      'uuid' => array(
        'type' => 'varchar',
        'length' => 37,
        'not null' => TRUE,
        'description' => 'Globally unique id of the assignment record.',
      ),
      'source' => array(
        'type' => 'varchar',
        'length' => 37,
        'not null' => TRUE,
        'description' => 'uuid of the source content.',
      ),
      'target' => array(
        'type' => 'varchar',
        'length' => 37,
        'not null' => TRUE,
        'description' => 'uuid of the target content.',
      ),
      'url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'URL of the system reporting this assignment.',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'Status of this assignment record.',
        'default' => 0,
        // Needs to be consistent with
        // \Drupal\sharedcontent\AssignmentInterface::STATUS_ACTIVE.
      ),
      'created' => array(
        'description' => 'UNIX timestamp of when the assignment was created.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'UNIX timestamp of when the assignment was updated.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'uuid' => array('uuid'),
      'assignment' => array('source', 'target', 'url'),
    ),
  );

  return $schema;
}
